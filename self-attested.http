@credentialType = SelfAttested5
@contractName = SelfAttestedName5
@webhook = https://webhook.site/126fef0e-ee5f-4952-94d7-404985c22889

### Admin access token endpoint
# @name adminLogin
POST https://login.microsoftonline.com/{{tenantId}}/oauth2/v2.0/token
Content-Type: application/x-www-form-urlencoded

client_id={{clientId}}
&scope={{adminScope}}
&client_secret={{clientSecret}}
&grant_type=client_credentials

### Create contract
# @name contract
POST https://verifiedid.did.msidentity.com/v1.0/verifiableCredentials/authorities/{{authorityId}}/contracts
Authorization: Bearer {{adminLogin.response.body.access_token}}
Content-Type: application/json

{
  "name": "{{contractName}}",
  "rules": {
    "attestations": {
      "selfIssued": {
        "mapping": [
          {
            "outputClaim": "forbiddenFood",
            "required": true,
            "inputClaim": "forbiddenFood",
            "indexed": false
          }
        ],
        "required": true
      }
    },
    "validityInterval": 2592000,
    "vc": {
      "type": [
        "{{credentialType}}"
      ]
    }
  },
  "displays": [
    {
      "locale": "en-US",
      "card": {
        "backgroundColor": "#E0E0E0",
        "description": "Forbidden food description",
        "issuedBy": "OpenSlava",
        "textColor": "#000000",
        "title": "Forbidden food title",
        "logo": {
          "description": "Default VC logo",
          "uri": "https://www.openslava.sk/2023/imgs/logo-icon.png"
        }
      },
      "consent": {
        "instructions": "Please click accept to add this special OpenSlava credential",
        "title": "Do you want to accept the OpenSlava credenial?"
      },
      "claims": [
        {
          "claim": "vc.credentialSubject.forbiddenFood",
          "label": "Forbidden food",
          "type": "String"
        }
      ]
    }
  ]
}

### Issuance Access Token Endpoint
# @name issuanceLogin
POST https://login.microsoftonline.com/{{tenantId}}/oauth2/v2.0/token
Content-Type: application/x-www-form-urlencoded

client_id={{clientId}}
&scope={{issuanceScope}}
&client_secret={{clientSecret}}
&grant_type=client_credentials

### Issuance
POST https://verifiedid.did.msidentity.com/v1.0/verifiableCredentials/createIssuanceRequest
Authorization: Bearer {{issuanceLogin.response.body.access_token}}
Content-Type: application/json

{
    "includeQRCode": false,
    "callback": {
        "url": "{{webhook}}",
        "state": "my-state",
        "headers": {
            "api-key": "my-api-key"
        }
    },
    "authority": "{{authority}}",
    "registration": {
        "clientName": "Info About The Issuer - This will be displayed in the app"
    },
    "type": "{{credentialType}}",
    "manifest": "{{contract.response.body.manifestUrl}}"
}

### Presentation
POST https://verifiedid.did.msidentity.com/v1.0/verifiableCredentials/createPresentationRequest
Authorization: Bearer {{issuanceLogin.response.body.access_token}}
Content-Type: application/json

{
  "includeReceipt": true,
  "authority": "{{authority}}",
  "registration": {
    "clientName": "Surname club verifier"
  },
  "callback": {
    "url": "{{webhook}}",
    "state": "my-verification-state",
    "headers": {
      "api-key": "my-api-key"
    }
  },
  "requestedCredentials": [
    {
      "type": "{{credentialType}}",
      "purpose": "So we can verify you",
      "acceptedIssuers": [
        "{{authority}}"
      ],
      "configuration": {
        "validation": {
          "allowRevoked": false,
          "validateLinkedDomain": true
        }
      }
    }
  ]
}